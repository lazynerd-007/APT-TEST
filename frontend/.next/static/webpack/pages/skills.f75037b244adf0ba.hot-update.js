"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/skills",{

/***/ "./src/services/skillsService.ts":
/*!***************************************!*\
  !*** ./src/services/skillsService.ts ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config */ \"./src/config.ts\");\n\n\n// Create axios instance with default config\nconst api = axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n    baseURL: _config__WEBPACK_IMPORTED_MODULE_0__.API_URL,\n    headers: {\n        \"Content-Type\": \"application/json\"\n    }\n});\n// Create a public API client that doesn't require authentication\nconst publicApiClient = axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n    baseURL: _config__WEBPACK_IMPORTED_MODULE_0__.API_URL,\n    headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n});\n// Add request interceptor to include auth token\napi.interceptors.request.use((config)=>{\n    const authData = localStorage.getItem(\"bluapt_auth\");\n    if (authData) {\n        try {\n            const { token } = JSON.parse(authData);\n            if (token && config.headers) {\n                config.headers.Authorization = \"Token \".concat(token);\n            }\n        } catch (error) {\n            console.error(\"Error parsing auth data:\", error);\n        }\n    }\n    return config;\n});\n// Skills API functions\nconst skillsService = {\n    // Get all skills\n    async getSkills () {\n        let params = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        try {\n            console.log(\"Fetching skills...\");\n            const response = await publicApiClient.get(\"/skills/\", {\n                params\n            });\n            console.log(\"Skills response:\", response.data);\n            return response.data;\n        } catch (error) {\n            console.error(\"Error fetching skills:\", error);\n            throw error;\n        }\n    },\n    // Get a single skill by ID\n    async getSkill (id) {\n        try {\n            const response = await api.get(\"/skills/\".concat(id, \"/\"));\n            return response.data;\n        } catch (error) {\n            console.error(\"Error fetching skill \".concat(id, \":\"), error);\n            throw error;\n        }\n    },\n    // Create a new skill\n    async createSkill (skill) {\n        try {\n            const response = await api.post(\"/skills/\", skill);\n            return response.data;\n        } catch (error) {\n            console.error(\"Error creating skill:\", error);\n            throw error;\n        }\n    },\n    // Update an existing skill\n    async updateSkill (id, skill) {\n        try {\n            const response = await api.put(\"/skills/\".concat(id, \"/\"), skill);\n            return response.data;\n        } catch (error) {\n            console.error(\"Error updating skill \".concat(id, \":\"), error);\n            throw error;\n        }\n    },\n    // Delete a skill\n    async deleteSkill (id) {\n        try {\n            await api.delete(\"/skills/\".concat(id, \"/\"));\n            return true;\n        } catch (error) {\n            console.error(\"Error deleting skill \".concat(id, \":\"), error);\n            throw error;\n        }\n    },\n    // Filter skills\n    getSkillsByCategory: async (categoryId)=>{\n        const response = await api.get(\"/skills/?category=\".concat(categoryId));\n        return response.data;\n    },\n    getSkillsByDifficulty: async (difficulty)=>{\n        const response = await api.get(\"/skills/?difficulty=\".concat(difficulty));\n        return response.data;\n    },\n    searchSkills: async (searchTerm)=>{\n        const response = await api.get(\"/skills/?search=\".concat(searchTerm));\n        return response.data;\n    },\n    // Get skills grouped by difficulty\n    getSkillsByDifficultyGrouped: async ()=>{\n        const response = await api.get(\"/skills/by_difficulty/\");\n        return response.data;\n    },\n    // Get all unique tags\n    getAllTags: async ()=>{\n        const response = await api.get(\"/skills/tags/\");\n        return response.data;\n    },\n    // Get all skill categories\n    async getCategories () {\n        try {\n            console.log(\"Fetching skill categories...\");\n            const response = await publicApiClient.get(\"/skills/categories/\");\n            console.log(\"Categories response:\", response.data);\n            return response.data;\n        } catch (error) {\n            console.error(\"Error fetching skill categories:\", error);\n            throw error;\n        }\n    },\n    // Get a single category by ID\n    async getCategory (id) {\n        try {\n            const response = await api.get(\"/skills/categories/\".concat(id, \"/\"));\n            return response.data;\n        } catch (error) {\n            console.error(\"Error fetching category \".concat(id, \":\"), error);\n            throw error;\n        }\n    },\n    // Create a new category\n    async createCategory (category) {\n        try {\n            const response = await api.post(\"/skills/categories/\", category);\n            return response.data;\n        } catch (error) {\n            console.error(\"Error creating category:\", error);\n            throw error;\n        }\n    },\n    // Update an existing category\n    async updateCategory (id, category) {\n        try {\n            const response = await api.put(\"/skills/categories/\".concat(id, \"/\"), category);\n            return response.data;\n        } catch (error) {\n            console.error(\"Error updating category \".concat(id, \":\"), error);\n            throw error;\n        }\n    },\n    // Delete a category\n    async deleteCategory (id) {\n        try {\n            await api.delete(\"/skills/categories/\".concat(id, \"/\"));\n            return true;\n        } catch (error) {\n            console.error(\"Error deleting category \".concat(id, \":\"), error);\n            throw error;\n        }\n    },\n    // Get skills for a specific category\n    getSkillsForCategory: async (categoryId)=>{\n        const response = await api.get(\"/skills/categories/\".concat(categoryId, \"/skills/\"));\n        return response.data;\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (skillsService);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/services/skillsService.ts\n"));

/***/ })

});