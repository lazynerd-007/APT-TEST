"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/questions/create",{

/***/ "./src/services/assessmentsService.ts":
/*!********************************************!*\
  !*** ./src/services/assessmentsService.ts ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var _apiClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./apiClient */ \"./src/services/apiClient.ts\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config */ \"./src/config.ts\");\n\n\n\n// Create a separate axios instance for public endpoints\nconst publicApiClient = axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].create({\n    baseURL: _config__WEBPACK_IMPORTED_MODULE_1__.API_URL,\n    headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n});\n// API Service\nconst assessmentsService = {\n    // Assessments\n    getAssessments: async (params)=>{\n        try {\n            console.log(\"Calling getAssessments with params:\", params);\n            // Use publicApiClient for development purposes\n            const response = await publicApiClient.get(\"/assessments/assessments/\", {\n                params\n            });\n            console.log(\"Assessment API response:\", response);\n            // Return the results array from the paginated response\n            return response.data.results || [];\n        } catch (error) {\n            console.error(\"Error in getAssessments:\", error);\n            if (axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isAxiosError(error) && error.response) {\n                console.error(\"API error response:\", error.response.data);\n            }\n            throw error;\n        }\n    },\n    getAssessment: async (id)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/assessments/assessments/\".concat(id, \"/\"));\n        return response.data;\n    },\n    createAssessment: async (assessment)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/assessments/assessments/\", assessment);\n        return response.data;\n    },\n    updateAssessment: async (id, assessment)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].put(\"/assessments/assessments/\".concat(id, \"/\"), assessment);\n        return response.data;\n    },\n    deleteAssessment: async (id)=>{\n        await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"][\"delete\"](\"/assessments/assessments/\".concat(id, \"/\"));\n    },\n    // Assessment Skills\n    getAssessmentSkills: async (assessmentId)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/assessments/assessments/\".concat(assessmentId, \"/skills/\"));\n        return response.data;\n    },\n    addSkillToAssessment: async function(assessmentId, skillId) {\n        let importance = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"secondary\";\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/assessments/assessments/\".concat(assessmentId, \"/add_skill/\"), {\n            skill_id: skillId,\n            importance\n        });\n        return response.data;\n    },\n    removeSkillFromAssessment: async (assessmentId, skillId)=>{\n        await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"][\"delete\"](\"/assessments/assessments/\".concat(assessmentId, \"/remove_skill/\"), {\n            data: {\n                skill_id: skillId\n            }\n        });\n    },\n    // Tests\n    getTests: async (params)=>{\n        try {\n            const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/assessments/tests/\", {\n                params\n            });\n            // Ensure we return an array of tests with id and title properties\n            const testsData = response.data;\n            // If the response is already an array, return it\n            if (Array.isArray(testsData)) {\n                return testsData;\n            }\n            // If the response has a results property (paginated response), return that\n            if (testsData.results && Array.isArray(testsData.results)) {\n                return testsData.results;\n            }\n            // Otherwise, return an empty array\n            console.warn(\"Unexpected response format from tests API:\", testsData);\n            return [];\n        } catch (error) {\n            console.error(\"Error fetching tests:\", error);\n            if (axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isAxiosError(error) && error.response) {\n                console.error(\"API error response:\", error.response.data);\n            }\n            throw error;\n        }\n    },\n    getTest: async (id)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/assessments/tests/\".concat(id, \"/\"));\n        return response.data;\n    },\n    createTest: async (test)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/assessments/tests/\", test);\n        return response.data;\n    },\n    updateTest: async (id, test)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].put(\"/assessments/tests/\".concat(id, \"/\"), test);\n        return response.data;\n    },\n    deleteTest: async (id)=>{\n        await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"][\"delete\"](\"/assessments/tests/\".concat(id, \"/\"));\n    },\n    // Questions\n    getQuestions: async (params)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/assessments/questions/\", {\n            params\n        });\n        return response.data;\n    },\n    getQuestion: async (id)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/assessments/questions/\".concat(id, \"/\"));\n        return response.data;\n    },\n    createQuestion: async (question)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/assessments/questions/\", question);\n        return response.data;\n    },\n    updateQuestion: async (id, question)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].put(\"/assessments/questions/\".concat(id, \"/\"), question);\n        return response.data;\n    },\n    deleteQuestion: async (id)=>{\n        await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"][\"delete\"](\"/assessments/questions/\".concat(id, \"/\"));\n    },\n    uploadQuestionsCSV: async (file, testId)=>{\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        formData.append(\"test_id\", testId);\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/assessments/questions/import_csv/\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n        return response.data;\n    },\n    exportQuestionsCSV: async (testId)=>{\n        try {\n            const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/assessments/questions/tests/\".concat(testId, \"/export_questions/\"), {\n                responseType: \"blob\"\n            });\n            // Create a download link and trigger the download\n            const url = window.URL.createObjectURL(new Blob([\n                response.data\n            ]));\n            const link = document.createElement(\"a\");\n            link.href = url;\n            link.setAttribute(\"download\", \"test_questions_\".concat(testId, \".csv\"));\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        } catch (error) {\n            console.error(\"Error exporting questions:\", error);\n            throw error;\n        }\n    },\n    getTestQuestions: async (testId)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/assessments/tests/\".concat(testId, \"/questions/\"));\n        return response.data;\n    },\n    // Candidate Assessments\n    getCandidateAssessments: async (params)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/assessments/candidate-assessments/\", {\n            params\n        });\n        return response.data;\n    },\n    getCandidateAssessment: async (id)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/assessments/candidate-assessments/\".concat(id, \"/\"));\n        return response.data;\n    },\n    createCandidateAssessment: async (candidateAssessment)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/assessments/candidate-assessments/\", candidateAssessment);\n        return response.data;\n    },\n    updateCandidateAssessment: async (id, candidateAssessment)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].put(\"/assessments/candidate-assessments/\".concat(id, \"/\"), candidateAssessment);\n        return response.data;\n    },\n    deleteCandidateAssessment: async (id)=>{\n        await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"][\"delete\"](\"/assessments/candidate-assessments/\".concat(id, \"/\"));\n    },\n    getCandidateAssessmentTests: async (candidateAssessmentId)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/assessments/candidate-assessments/\".concat(candidateAssessmentId, \"/tests/\"));\n        return response.data;\n    },\n    getCandidateAssessmentSkillScores: async (candidateAssessmentId)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/assessments/candidate-assessments/\".concat(candidateAssessmentId, \"/skill_scores/\"));\n        return response.data;\n    },\n    // Filter assessments by skill\n    getAssessmentsBySkill: async (skillId)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/assessments/\", {\n            params: {\n                skill_id: skillId\n            }\n        });\n        return response.data;\n    },\n    // Filter tests by skill\n    getTestsBySkill: async (skillId)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/tests/\", {\n            params: {\n                skill_id: skillId\n            }\n        });\n        return response.data;\n    },\n    // Get assessments for inviting candidates\n    getAssessmentsForInvite: async ()=>{\n        try {\n            console.log(\"Fetching assessments for invite...\");\n            // Use publicApiClient for this endpoint to avoid authentication issues\n            const response = await publicApiClient.get(\"/assessments/\", {\n                params: {\n                    is_active: true\n                }\n            });\n            console.log(\"Assessment API response:\", response);\n            return response.data;\n        } catch (error) {\n            console.error(\"Error fetching assessments for invite:\", error);\n            if (axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isAxiosError(error) && error.response) {\n                console.error(\"API error response:\", error.response.data);\n            }\n            throw error;\n        }\n    },\n    // Candidate Tests\n    getCandidateTests: async (params)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/assessments/candidate-tests/\", {\n            params\n        });\n        return response.data;\n    },\n    getCandidateTest: async (id)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/assessments/candidate-tests/\".concat(id, \"/\"));\n        return response.data;\n    },\n    updateCandidateTest: async (id, data)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].patch(\"/assessments/candidate-tests/\".concat(id, \"/\"), data);\n        return response.data;\n    },\n    submitAnswer: async (candidateTestId, questionId, data)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/assessments/candidate-tests/\".concat(candidateTestId, \"/answers/\"), {\n            question_id: questionId,\n            ...data\n        });\n        return response.data;\n    },\n    getAnswers: async (candidateTestId)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/assessments/candidate-tests/\".concat(candidateTestId, \"/answers/\"));\n        return response.data;\n    },\n    // Skill Scores\n    getSkillScores: async (params)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/assessments/skill-scores/\", {\n            params\n        });\n        return response.data;\n    },\n    getSkillScore: async (id)=>{\n        const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/assessments/skill-scores/\".concat(id, \"/\"));\n        return response.data;\n    },\n    reorderQuestions: async (testId, questionIds)=>{\n        try {\n            const response = await _apiClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/assessments/tests/\".concat(testId, \"/reorder_questions/\"), {\n                question_ids: questionIds\n            });\n            return response.data;\n        } catch (error) {\n            console.error(\"Error reordering questions:\", error);\n            if (axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isAxiosError(error) && error.response) {\n                console.error(\"API error response:\", error.response.data);\n            }\n            throw error;\n        }\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (assessmentsService);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/services/assessmentsService.ts\n"));

/***/ })

});